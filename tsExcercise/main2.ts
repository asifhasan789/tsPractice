// 2 Develop a TypeScript code snippet for a frontend component that handles user input. Implement measures
// to prevent common security vulnerabilities, such as input sanitization to prevent XSS and anti-CSRF tokens.

function sanitizeInput(input: string) {
  return input.replace(/<[^>]*>/g, "");
}

function handleSubmit(event: Event) {

  event.preventDefault();

  const valInput = document.getElementById("input1") as HTMLInputElement;

  const inputString: string = valInput.value;

  console.log("UnSanitized Input String :", inputString);

  const sanitizedInput: string = sanitizeInput(inputString);

  console.log("Sanitized Input String :", sanitizedInput);
  valInput.value = sanitizedInput;
}


//anti csrf token can be generated by server 
//and sended to user on request of

import express from "express";
import csrf from "csurf";
import cookieParser from "cookie-parser";

const app = express();
app.use(cookieParser());
app.use(csrf({ cookie: true }));

app.get("/", (req: Request, res: Response) => {
  res.render("index", { csrfToken: req.csrfToken() });
});

app.post("/api/submit-form", (req: Request, res: Response) => {
  // Verify CSRF token
  if (!req.csrfToken() || req.headers["csrf-token"] !== req.csrfToken()) {
    return res.status(403).json({ error: "Invalid CSRF token" });
  }

  const formData = req.body;

  console.log("Form data:", formData);

  res.json({ success: true });
});

app.listen(port, () => {
  console.log(`Server is running at http://localhost:${port}`);
});

//react code for csrf
import axios from "axios";

const MyForm = ({ csrfToken }) => {
  const handleSubmit = async (event) => {
    event.preventDefault();
    try {
      await axios.post(
        "/api/submit-form",
        {
          /* your form data */
        },
        { headers: { "CSRF-Token": csrfToken } }
      );
      // Handle successful form submission
    } catch (error) {
      // Handle error
    }
  };

  return (
    <form onSubmit={handleSubmit}>
      {/* Your form fields */}
      <input type="hidden" name="_csrf" value={csrfToken} />
      <button type="submit">Submit</button>
    </form>
  );
};
